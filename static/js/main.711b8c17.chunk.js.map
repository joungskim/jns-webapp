{"version":3,"sources":["jslogo.png","containers/Rentals.js","components/RentalCarousel.js","components/RentalCard.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","rental","images","description","title","cost","location","city","state","zip","address","suite","phone","email","RentalCarousel","useState","index","setIndex","data-interval","Carousel","activeIndex","onSelect","selectedIndex","e","map","i","Item","className","src","alt","RentalCard","show","setShow","addressDisplay","Modal","onHide","dialogClassName","aria-labelledby","size","Header","closeButton","JSLogo","Body","style","display","justifyContent","Footer","Card","width","onClick","Img","variant","Text","App","console","log","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,oC,oMCA9BC,G,kBACT,CACIC,OAAQ,CACJ,0FACA,qIACA,uFAEJC,YAAa,qsCACbC,MAAO,cACPC,KAAM,KACNC,SAAU,CACNC,KAAM,WACNC,MAAO,KACPC,IAAK,QACLC,QAAS,oBACTC,MAAO,OAEXC,MAAO,eACPC,MAAO,2B,wCCuBAC,G,MArCQ,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OAAa,EAETa,mBAAS,GAFA,mBAE5BC,EAF4B,KAErBC,EAFqB,KAQnC,OACI,yBAAKC,gBAAc,SACf,kBAACC,EAAA,EAAD,CACIC,YAAaJ,EACbK,SARS,SAACC,EAAeC,GACjCN,EAASK,IAQDJ,gBAAc,SAGVhB,EAAOsB,KAAI,SAACvB,EAAQwB,GAChB,OACI,kBAACN,EAAA,EAASO,KAAV,KACI,yBACIC,UAAU,6BACVC,IAAK1B,EAAOuB,GACZI,IAAG,UAAKJ,EAAI,a,iBCwDjCK,EA3EI,SAAC,GAAgB,IAAd7B,EAAa,EAAbA,OAElBC,EAKED,EALFC,OACAE,EAIEH,EAJFG,MACAD,EAGEF,EAHFE,YACAE,EAEEJ,EAFFI,KACAO,EACEX,EADFW,MAN+B,EAe7BX,EAAOK,SALTC,EAV+B,EAU/BA,KACAC,EAX+B,EAW/BA,MACAE,EAZ+B,EAY/BA,QACAC,EAb+B,EAa/BA,MACAF,EAd+B,EAc/BA,IAd+B,EAiBTM,oBAAS,GAjBA,mBAiB1BgB,EAjB0B,KAiBpBC,EAjBoB,KAmB3BC,EAAiBtB,EACrBD,EAAU,WAAaC,EAAQ,KAAOJ,EAAO,KAAOC,EAAQ,IAAMC,EAClEC,EAAU,KAAOH,EAAO,KAAOC,EAAQ,IAAMC,EAE/C,OACE,6BACE,kBAACyB,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQ,kBAAMH,GAAQ,IACtBI,gBAAgB,YAChBC,kBAAgB,kCAChBC,KAAK,MAEL,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,yBAAKb,UAAU,cAAcC,IAAKa,MAClC,gCAAMrC,EAAN,OAAiBC,EAAjB,YAEF,kBAAC6B,EAAA,EAAMQ,KAAP,KAEE,yBAAKC,MAAO,CAACC,QAAS,OAAOC,eAAgB,WAC3C,kBAAC,EAAD,CAAgB3C,OAAQA,MAG5B,kBAACgC,EAAA,EAAMQ,KAAP,CAAYf,UAAU,iBACpB,wCACaM,GAEb,2BACG9B,IAIL,kBAAC+B,EAAA,EAAMY,OAAP,KACE,2CAAiBlC,EAAjB,OAIJ,kBAACmC,EAAA,EAAD,CACEpB,UAAU,mDACVgB,MAAO,CAAEK,MAAO,SAChBC,QAAS,kBAAMjB,GAAQ,KAEvB,kBAACe,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMvB,IAAK1B,EAAO,KACpC,kBAAC6C,EAAA,EAAKL,KAAN,KACE,kBAACK,EAAA,EAAKK,KAAN,KACE,gCAAMhD,EAAN,KACA,sCAAYC,EAAZ,QACA,yCAAeE,EAAf,KAAuBC,EAAvB,KACA,+D,MC3DG6C,MATf,WAEE,OADAC,QAAQC,IAAItD,GAEV,yBAAK0B,UAAU,OACb,kBAAC,EAAD,CAAY1B,OAAQA,MCENuD,QACW,cAA7BC,OAAOnD,SAASoD,UAEe,UAA7BD,OAAOnD,SAASoD,UAEhBD,OAAOnD,SAASoD,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlB,QAAQkB,MAAMA,EAAMC,c","file":"static/js/main.711b8c17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jslogo.54b85546.png\";","export const rental =\r\n    {\r\n        images: [\r\n            'https://images.unsplash.com/photo-1580587771525-78b9dba3b914?ixlib=rb-1.2.1&w=1000&q=80',\r\n            'https://media.architecturaldigest.com/photos/571e97c5741fcddb16b559c9/2:1/w_5127,h_2563,c_limit/modernist-decor-inspiration-01.jpg',\r\n            'https://cdn.archilovers.com/projects/c_383_c692390d-e885-4088-a972-8cae6c389355.jpg'\r\n        ], \r\n        description: 'Of course, no home is perfect, so you don’t want to completely omit less desirable features — especially if they’re obvious in the photos. Instead, spin them as a positive or add in some creativity or humor. Here are a few examples Expenses as material breeding insisted building to in. Continual so distrusts pronounce by unwilling listening. Thing do taste on we manor. Him had wound use found hoped. Of distrusts immediate enjoyment curiosity do. Marianne numerous saw thoughts the humoured. In show dull give need so held. One order all scale sense her gay style wrote. Incommode our not one ourselves residence. Shall there whose those stand she end. So unaffected partiality indulgence dispatched to of celebrated remarkably. Unfeeling are had allowance own perceived abilities. Had repulsive dashwoods suspicion sincerity but advantage now him. Remark easily garret nor nay. Civil those mrs enjoy shy fat merry. You greatest jointure saw horrible. He private he on be imagine suppose. Fertile beloved evident through no service elderly is. Blind there if every no so at. Own neglected you preferred way sincerity delivered his attempted. To of message cottage windows do besides against uncivil. ',\r\n        title: 'Modern Home', \r\n        cost: 1500, \r\n        location: {\r\n            city: 'Lawrence',\r\n            state: 'KS',\r\n            zip: '66204',\r\n            address: '1111 Some Address',\r\n            suite: '123'\r\n        },\r\n        phone: '785-375-4480',\r\n        email: 'jeremyrodery@gmail.com'\r\n    };\r\n\r\nexport default rental;","import React, { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport './RentalCarousel.css'\r\n\r\nconst RentalCarousel = ({ images }) => {\r\n\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n\r\n    return (\r\n        <div data-interval=\"false\" >\r\n            <Carousel\r\n                activeIndex={index}\r\n                onSelect={handleSelect}\r\n                data-interval=\"false\"\r\n            >\r\n                {\r\n                    images.map((rental, i) => {\r\n                        return (\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100 carousel-img\"\r\n                                    src={images[i]}\r\n                                    alt={`${i + 1}`}\r\n                                />\r\n                                {/* <Carousel.Caption>\r\n                      <h3>{props.caption[i]}</h3>\r\n                      <p>{props.subCaption[i]}Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption> */}\r\n                            </Carousel.Item>\r\n                        );\r\n                    })\r\n                }\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RentalCarousel","import React, { useState } from 'react';\r\nimport './RentalCard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport RentalCarousel from './RentalCarousel';\r\nimport JSLogo from '../jslogo.png'\r\n\r\nconst RentalCard = ({ rental }) => {\r\n  const {\r\n    images,\r\n    title,\r\n    description,\r\n    cost,\r\n    phone,\r\n  } = rental;\r\n\r\n  const {\r\n    city,\r\n    state,\r\n    address,\r\n    suite,\r\n    zip\r\n  } = rental.location\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const addressDisplay = suite ?\r\n    address + \", Suite \" + suite + \", \" + city + \", \" + state + \" \" + zip :\r\n    address + \", \" + city + \", \" + state + \" \" + zip;\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"rental-card-modal-styling-title\"\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <img className='logo-shrink' src={JSLogo} />\r\n          <h3> {title} - ${cost}/Month </h3>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {/* move this to css file. */}\r\n          <div style={{display: 'flex',justifyContent: 'center'}}> \r\n            <RentalCarousel images={images} />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Body className='overflow-body'>\r\n          <p>\r\n            Location: {addressDisplay}\r\n          </p>\r\n          <p>\r\n            {description} \r\n\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <b> Contact Us: {phone} </b>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Card\r\n        className=\"dib br3 pa3 ma2 grow bw2 shadow-3 tc card-adjust\"\r\n        style={{ width: '18rem' }}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        <Card.Img variant=\"top\" src={images[0]} />\r\n        <Card.Body>\r\n          <Card.Text>\r\n            <h3> {title} </h3>\r\n            <p> Cost: ${cost}/Mo </p>\r\n            <p> Location: {city}, {state} </p>\r\n            <i>Click For More Information.</i>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RentalCard;","import React from 'react';\r\nimport './App.css';\r\nimport { rental } from './Rentals';\r\nimport RentalCard from '../components/RentalCard';\r\nimport 'tachyons';\r\n\r\nfunction App() {\r\n  console.log(rental);\r\n  return (\r\n    <div className=\"App\">\r\n      <RentalCard rental={rental} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}